{"ast":null,"code":"import _slicedToArray from \"/Users/hohozay/newFinalProject/project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hohozay/newFinalProject/project/src/components/modals/modalLogin.js\";\nimport React from 'react';\nimport { Button, Modal } from 'react-bootstrap'; //import swal from '@sweetalert/with-react'\n// do i need to pass the sweetalert component as a prop?\n\nfunction ModalLogin() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        setShow = _React$useState2[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"primary\",\n    className: \"btn btn-dark nav-item text-white\",\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Login\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"username\",\n    placeholder: \"Enter username!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    placeholder: \"Enter password!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Close\"))));\n}\n\nexport default ModalLogin;","map":{"version":3,"sources":["/Users/hohozay/newFinalProject/project/src/components/modals/modalLogin.js"],"names":["React","Button","Modal","ModalLogin","useState","show","setShow","handleClose","handleShow"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B,C,CACA;AACA;;AACA,SAASC,UAAT,GAAuB;AAAA,0BACGH,KAAK,CAACI,QAAN,CAAe,KAAf,CADH;AAAA;AAAA,QACdC,IADc;AAAA,QACRC,OADQ;;AAErB,QAAMC,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,SACI,0CACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,kCAApC;AAAuE,IAAA,OAAO,EAAEE,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,EAAE,EAAC,UAA/C;AAA0D,IAAA,WAAW,EAAC,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAC,cAAjC;AAAgD,IAAA,EAAE,EAAC,UAAnD;AAA8D,IAAA,WAAW,EAAC,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAJF,EAcE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAdF,CALF,CADJ;AA4BD;;AAED,eAAeJ,UAAf","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n//import swal from '@sweetalert/with-react'\n// do i need to pass the sweetalert component as a prop?\nfunction ModalLogin () {\n  const [show, setShow] = React.useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n      <>\n        <Button variant='primary' className='btn btn-dark nav-item text-white' onClick={handleShow}>\n        Login\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <label htmlFor='username'>Username</label>\n            <div className='form-group'>\n              <input type='text' className='form-control' id='username' placeholder='Enter username!' />\n            </div>\n            <label htmlFor='password'>Password</label>\n            <div className='form-group'>\n              <input type='password' className='form-control' id='password' placeholder='Enter password!' />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  )\n}\n\nexport default ModalLogin\n"]},"metadata":{},"sourceType":"module"}